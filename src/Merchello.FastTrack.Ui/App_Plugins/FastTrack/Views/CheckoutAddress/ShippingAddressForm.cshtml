@inherits Merchello.Web.Mvc.MerchelloViewPage<Merchello.FastTrack.Models.FastTrackCheckoutAddressModel>
@using System.Web.Mvc.Html
@using Merchello.FastTrack.Controllers
@using Merchello.FastTrack.Ui
@using Merchello.Web
@using Merchello.Web.Models.Ui
@using Merchello.Core.Models
@using Merchello.Web.Workflow
@using Umbraco.Web
@{
    var hasShippableItems = CurrentCustomer.Basket().HasShippableItems();

    Model.SuccessRedirectUrl = hasShippableItems ?
        ExampleUiHelper.CheckoutWorkflow.GetPageForStage(CheckoutStage.ShipRateQuote).Url :
        ExampleUiHelper.CheckoutWorkflow.GetPageForStage(CheckoutStage.PaymentMethod).Url;
    var customer = CurrentCustomer as ICustomer;
}

<h3>Shipping Address</h3>
@using (Html.BeginUmbracoForm<CheckoutAddressController>("SaveShippingAddress", new { area = "FastTrack" }, new { data_muistage = "ShippingAddress" }))
{
    <div class="row">
        <div class="col-md-6 form-group">
            @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control", placeholder = "First name*", @Value = string.IsNullOrEmpty(Model.FirstName) && customer != null ? customer.FirstName : Model.FirstName })
            @Html.ValidationMessageFor(x => x.FirstName)
        </div>

        <div class="col-md-6 form-group">
            @Html.TextBoxFor(x => x.LastName, new { @class = "form-control", placeholder = "Surname*", @Value = string.IsNullOrEmpty(Model.LastName) && customer != null ? customer.LastName : Model.LastName })
            @Html.ValidationMessageFor(x => x.LastName)
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 form-group">
            @Html.TextBoxFor(x => x.Email, new { @class = "form-control", placeholder = "Email*", @Value = string.IsNullOrEmpty(Model.Email) && customer != null ? customer.Email : Model.Email })
            @Html.ValidationMessageFor(x => x.Email)
        </div>
        <div class="col-md-12 form-group">
            @Html.TextBoxFor(x => x.Organization, new { @class = "form-control", placeholder = "Company Name (optional)" })
        </div>
        <div class="col-md-12 form-group">
            @Html.TextBoxFor(x => x.Address1, new { @class = "form-control", placeholder = "Street Address*" })
            @Html.ValidationMessageFor(x => x.Address1)
        </div>

        <div class="col-md-12 form-group">
            @Html.TextBoxFor(x => x.Address2, new { @class = "form-control", placeholder = "Street Address 2 (optional)" })
        </div>
    </div>
    <div class="row">
        <div class="col-md-6 form-group">
            @Html.TextBoxFor(x => x.Locality, new { @class = "form-control", placeholder = "City*" })
            @Html.ValidationMessageFor(x => x.Locality)
        </div>
        <div class="col-md-6 form-group">
            @Html.TextBoxFor(x => x.Region, new { @class = "form-control", data_muivalue = "region", @style = "display:none;" })
            <select class="form-control" data-muiaction="updateregion">
                <option>Region *</option>
            </select>
            @Html.ValidationMessageFor(x => x.Region)
        </div>
    </div>
    <div class="row">
        <div class="col-md-6 form-group">
            @Html.TextBoxFor(x => x.PostalCode, new { @class = "form-control", placeholder = "Postcode*" })
            @Html.ValidationMessageFor(x => x.PostalCode)
        </div>
        <div class="col-md-6 form-group">
            @Html.DropDownListFor(x => x.CountryCode, Model.Countries, "Country*", new { @class = "form-control", data_muiaction = "populateregion" })
            @Html.ValidationMessageFor(x => x.CountryCode)
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 form-group">
            @Html.TextBoxFor(x => x.Phone, new { @class = "form-control", placeholder = "Phone*" })
            @Html.ValidationMessageFor(x => x.Phone)
        </div>
    </div>

    @Html.HiddenFor(x => x.Key)
    @Html.HiddenFor(x => x.SuccessRedirectUrl)
    @Html.HiddenFor(x => x.AddressType)
    @Html.AntiForgeryToken()
    <div>
        <a href="@ExampleUiHelper.CheckoutWorkflow.GetPageForStage(CheckoutStage.BillingAddress).Url" class="btn btn-default">Back</a>
        <input type="submit" class="btn pull-right" value="Next" />
    </div>
}